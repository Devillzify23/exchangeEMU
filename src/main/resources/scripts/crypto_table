drop database if exists exchange_emu;
create database exchange_emu;
use exchange_emu;

-- creacion tabla cryptos

create table crypto_list(
symbol varchar(10) primary key,
name varchar(20),
description text,
max_supply varchar(50)
);
-- inserts de las cryptos que vamos a usar

insert into crypto_list values("BTC","Bitcoin","Bitcoin​ es una moneda digital descentralizada y un sistema de pago​​ sin banco central o administrador unico.​​La criptomoneda fue concebida en el año 2008 por una persona o grupo de personas bajo el seudonimo de Satoshi Nakamoto, ​ cuya identidad concreta se desconoce.","21000000");
insert into crypto_list values("ETH","Ethereum","Ethereum es una plataforma de codigo abierto, que sirve para ejecutar contratos inteligentes. Es programable, lo que significa que los desarrolladores pueden usarlo en la creacion de aplicaciones descentralizadas.​​","infinito");
insert into crypto_list values("LTC","Litecoin","Litecoin es una criptomoneda y proyecto de software de codigo abierto publicado bajo la licencia MIT​ inspirado y practicamente identico en su aspecto tecnico​ a Bitcoin.","84,000,000");
insert into crypto_list values("SOL","Solana","Solana es una plataforma de blockchain de acceso general con funcional de contratos inteligentes. La plataforma tiene su propia criptomoneda SOL.​ La Solana esta basada sobre el algoritmo de consenso PoS.​","infinito");
insert into crypto_list values("ADA","Cardano","Cardano es una cadena de bloques de codigo abierto, asi como una plataforma para ejecutar contratos inteligentes y emitir su propia moneda digital, el ada. Cardano fue fundada en 2015 por el cofundador de Ethereum, Charles Hoskinson.","45000000000");

-- creacion tabla users

create table users(
id int primary key auto_increment,
nombre varchar(50),
apellido varchar(50),
cuenta varchar(25),
contra varchar(20),
apodo varchar(50),
saldo double
);

-- creacion tabla records

create table transaction_history(
id int primary key auto_increment,
id_user int,
symbol varchar(10),
actual_price double,
amount double,
op_type char,
transaction_time datetime,
foreign key (id_user) references users(id)
);

CREATE TABLE users_wallets (
  id_user INT,
  symbol VARCHAR(50),
  funds DOUBLE,
  CONSTRAINT PK_wallets PRIMARY KEY (id_user, symbol),
  FOREIGN KEY (id_user) REFERENCES users(id),
  FOREIGN KEY (symbol) REFERENCES crypto_list(symbol)
);